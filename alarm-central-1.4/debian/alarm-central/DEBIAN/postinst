#!/bin/sh
# postinst script for alarm-central
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    configure)
		### add user alarm
		[ -d /home/alarm ] || useradd -r -s /bin/bash -m alarm
		[ -d /home/alarm/.ssh ] || mkdir /home/alarm/.ssh

		### generate ssh key for alarm; here necessary!
		chown -R alarm:alarm /home/alarm
		chmod 750 /home/alarm/.ssh
		[ ! -f /home/alarm/.ssh/id_rsa.pub ] && su alarm -c 'ssh-keygen -t rsa -N "" -f ~/.ssh/id_rsa'

		### set ownerships and permissions
		chown -R root:alarm /etc/alarm
		chmod 770 /etc/alarm
		chmod 660 /etc/alarm/alarm_local_central.conf
		chmod 660 /etc/alarm/alarm_global_central.conf
		touch /var/log/alarm.log
		chown root:alarm /var/log/alarm.log
		chmod 660 /var/log/alarm.log
		
		### create alarm_global.conf if alarm-client is not installed
		dpkg -s alarm-client >/dev/null 2>/dev/null || cp -a /etc/alarm/alarm_global_central.conf /etc/alarm/alarm_global.conf
		
		### respect config of alarm-client
		## consider in detail...

		### install alarmd for alarm
		_USER="alarm"
		grep -e ^$_USER /etc/passwd >/dev/null || { echo "User alarm does not exist; something went wrong."; exit 1; }
		_HOME="$(eval echo ~$_USER)"
		[ -f $_HOME/.ssh/id_rsa.pub ] && cat $_HOME/.ssh/id_rsa.pub >> /home/alarm/.ssh/authorized_keys
		cat /home/alarm/.ssh/authorized_keys | sort | uniq >> /home/alarm/.ssh/authorized_keys.tmp
		mv /home/alarm/.ssh/authorized_keys.tmp /home/alarm/.ssh/authorized_keys
		###

		### finish and cleanup
		chown -R alarm:alarm /home/alarm
		chmod 750 /home/alarm/.ssh
		chmod 640 /home/alarm/.ssh/authorized_keys
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

# Automatically added by dh_systemd_enable/13.3.4
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	# This will only remove masks created by d-s-h on package removal.
	deb-systemd-helper unmask 'alarm_authlog.service' >/dev/null || true

	# was-enabled defaults to true, so new installations run enable.
	if deb-systemd-helper --quiet was-enabled 'alarm_authlog.service'; then
		# Enables the unit on first installation, creates new
		# symlinks on upgrades if the unit file has changed.
		deb-systemd-helper enable 'alarm_authlog.service' >/dev/null || true
	else
		# Update the statefile to add new symlinks (if any), which need to be
		# cleaned up on purge. Also remove old symlinks.
		deb-systemd-helper update-state 'alarm_authlog.service' >/dev/null || true
	fi
fi
# End automatically added section
# Automatically added by dh_systemd_enable/13.3.4
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	# This will only remove masks created by d-s-h on package removal.
	deb-systemd-helper unmask 'alarm_authlog.timer' >/dev/null || true

	# was-enabled defaults to true, so new installations run enable.
	if deb-systemd-helper --quiet was-enabled 'alarm_authlog.timer'; then
		# Enables the unit on first installation, creates new
		# symlinks on upgrades if the unit file has changed.
		deb-systemd-helper enable 'alarm_authlog.timer' >/dev/null || true
	else
		# Update the statefile to add new symlinks (if any), which need to be
		# cleaned up on purge. Also remove old symlinks.
		deb-systemd-helper update-state 'alarm_authlog.timer' >/dev/null || true
	fi
fi
# End automatically added section
# Automatically added by dh_systemd_enable/13.3.4
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	# This will only remove masks created by d-s-h on package removal.
	deb-systemd-helper unmask 'alarm_cleanup.service' >/dev/null || true

	# was-enabled defaults to true, so new installations run enable.
	if deb-systemd-helper --quiet was-enabled 'alarm_cleanup.service'; then
		# Enables the unit on first installation, creates new
		# symlinks on upgrades if the unit file has changed.
		deb-systemd-helper enable 'alarm_cleanup.service' >/dev/null || true
	else
		# Update the statefile to add new symlinks (if any), which need to be
		# cleaned up on purge. Also remove old symlinks.
		deb-systemd-helper update-state 'alarm_cleanup.service' >/dev/null || true
	fi
fi
# End automatically added section
# Automatically added by dh_systemd_enable/13.3.4
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	# This will only remove masks created by d-s-h on package removal.
	deb-systemd-helper unmask 'alarm_cleanup.timer' >/dev/null || true

	# was-enabled defaults to true, so new installations run enable.
	if deb-systemd-helper --quiet was-enabled 'alarm_cleanup.timer'; then
		# Enables the unit on first installation, creates new
		# symlinks on upgrades if the unit file has changed.
		deb-systemd-helper enable 'alarm_cleanup.timer' >/dev/null || true
	else
		# Update the statefile to add new symlinks (if any), which need to be
		# cleaned up on purge. Also remove old symlinks.
		deb-systemd-helper update-state 'alarm_cleanup.timer' >/dev/null || true
	fi
fi
# End automatically added section
# Automatically added by dh_systemd_enable/13.3.4
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	# This will only remove masks created by d-s-h on package removal.
	deb-systemd-helper unmask 'alarmd.service' >/dev/null || true

	# was-enabled defaults to true, so new installations run enable.
	if deb-systemd-helper --quiet was-enabled 'alarmd.service'; then
		# Enables the unit on first installation, creates new
		# symlinks on upgrades if the unit file has changed.
		deb-systemd-helper enable 'alarmd.service' >/dev/null || true
	else
		# Update the statefile to add new symlinks (if any), which need to be
		# cleaned up on purge. Also remove old symlinks.
		deb-systemd-helper update-state 'alarmd.service' >/dev/null || true
	fi
fi
# End automatically added section
# Automatically added by dh_systemd_start/13.3.4
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	if [ -d /run/systemd/system ]; then
		systemctl --system daemon-reload >/dev/null || true
		if [ -n "$2" ]; then
			_dh_action=restart
		else
			_dh_action=start
		fi
		deb-systemd-invoke $_dh_action 'alarm_authlog.service' 'alarm_authlog.timer' 'alarm_cleanup.service' 'alarm_cleanup.timer' 'alarmd.service' >/dev/null || true
	fi
fi
# End automatically added section


exit 0
