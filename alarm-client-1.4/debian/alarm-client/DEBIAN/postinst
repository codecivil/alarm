#!/bin/sh
# postinst script for alarm-client
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    configure)
		### add user alarm
		[ -d /home/alarm ] || useradd -r -s /bin/bash -m alarm
		[ -d /home/alarm/.ssh ] || { mkdir /home/alarm/.ssh; chown alarm:alarm /home/alarm/.ssh; }

		### generate ssh key for alarm; not really necessary
		#chown -R alarm:alarm /home/alarm
		#chmod 750 /home/alarm/.ssh
		#su alarm -c 'ssh-keygen -t rsa -N "" -f ~/.ssh/id_rsa'

		### set ownerships and permissions
		chown -R root:alarm /etc/alarm
		chmod 770 /etc/alarm
		chmod 660 /etc/alarm/alarm_local.conf
		chmod 660 /etc/alarm/alarm_global.conf
		touch /var/log/alarm.log
		chown root:alarm /var/log/alarm.log
		chmod 660 /var/log/alarm.log
		
		### install alarmd for every user (and generate ssh-key if not exists)
		for _USER in $(ls /home); do
			# ignore users without login
			grep -e ^$_USER: /etc/passwd | grep -v nologin > /dev/null || continue
			# ignore users with expired password (too much of a hassle)
			[ "$(grep -e ^$_USER: /etc/shadow | sed 's/:/ /g' | awk '{print $3; }')" -eq "0" ] && continue
			#
			_HOME="$(eval echo ~$_USER)"
			[ -d $_HOME/.config/autostart ] || mkdir -p $_HOME/.config/autostart
			cp -a /usr/share/alarm/alarmd.desktop $_HOME/.config/autostart/
			[ -d $_HOME/.config/alarm ] || mkdir -p $_HOME/.config/alarm
			touch $_HOME/.config/alarm/alarm_user.conf
			#repair ownership
			chown -R $_USER:$_USER $_HOME/.config/alarm
			chown -R $_USER:$_USER $_HOME/.config/autostart
			#generate ssh key if not present
			[ -f $_HOME/.ssh/id_rsa.pub ] || su $_USER -c 'ssh-keygen -t rsa -N "" -f ~/.ssh/id_rsa' && cat $_HOME/.ssh/id_rsa.pub >> /home/alarm/.ssh/authorized_keys
			# add localhost to known hosts of every user
			su $_USER -c "ssh -o StrictHostKeyChecking=no alarm@localhost 'exit'"
			usermod -aG alarm $_USER
		done
		cat /home/alarm/.ssh/authorized_keys | sort | uniq >> /home/alarm/.ssh/authorized_keys.tmp
		mv /home/alarm/.ssh/authorized_keys.tmp /home/alarm/.ssh/authorized_keys

		### finish and cleanup
		chown -R alarm:alarm /home/alarm
		chmod 750 /home/alarm/.ssh
		[ -f /home/alarm/.ssh/authorized_keys ] && chmod 640 /home/alarm/.ssh/authorized_keys || echo "NO USER IS SET UP FOR ALARM!"
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.



exit 0
